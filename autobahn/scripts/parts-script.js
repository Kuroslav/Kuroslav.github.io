// Import Firebase
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.2.0/firebase-app.js";
import { getDatabase, ref, get, set, onValue } from "https://www.gstatic.com/firebasejs/11.2.0/firebase-database.js";
import { getAuth, signInWithEmailAndPassword, signOut, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.2.0/firebase-auth.js";

// Firebase konfigurace
const firebaseConfig = {
  apiKey: "AIzaSyDJlvFTiLQmksr4woGYPd6xqP8hEO49Fmk",
  authDomain: "autobahn-6a567.firebaseapp.com",
  databaseURL: "https://autobahn-6a567-default-rtdb.europe-west1.firebasedatabase.app",
  projectId: "autobahn-6a567",
  storageBucket: "autobahn-6a567.appspot.com",
  messagingSenderId: "638021583116",
  appId: "1:638021583116:web:a41810afcfcbf6163a8929",
  measurementId: "G-W2JX0B4YES"
};

// Inicializace Firebase
const app = initializeApp(firebaseConfig);
const db = getDatabase(app);
const auth = getAuth();

// P≈ôedpokl√°d√°me, ≈æe poƒçet d√≠l≈Ø je ulo≈æen v localStorage
let stockCount = parseInt(localStorage.getItem('stockCount') || '10', 10);

// Element pro zobrazen√≠ dostupnosti
const availabilityElement = document.getElementById('stockCount');

// Funkce pro zobrazen√≠ dostupnosti
function updateAvailability() {
  const stockRef = ref(db, 'stock/stockCount');  // Odkaz na stockCount v datab√°zi Firebase
  get(stockRef).then((snapshot) => {
    if (snapshot.exists()) {
      stockCount = snapshot.val();
      if (stockCount > 0) {
        availabilityElement.textContent = `Skladem ${stockCount}`;
        availabilityElement.style.color = 'green'; // Zelen√° pro skladem
      } else {
        availabilityElement.textContent = 'Nedostupn√Ω';
        availabilityElement.style.color = 'red'; // ƒåerven√° pro nedostupnost
      }
    } else {
      console.log("Chyba p≈ôi naƒç√≠t√°n√≠ informac√≠ o skladu.");
    }
  }).catch((error) => {
    console.error("Chyba p≈ôi z√≠sk√°v√°n√≠ informac√≠ o skladƒõ:", error);
  });
}

// Funkce pro objedn√°n√≠ d√≠l≈Ø
function orderPart(quantity) {
  const stockRef = ref(db, 'stock/stockCount');  // Odkaz na stockCount v datab√°zi Firebase
  get(stockRef).then((snapshot) => {
    if (snapshot.exists()) {
      let stockCount = snapshot.val();
      if (quantity <= stockCount) {
        stockCount -= quantity;
        // Aktualizuj stockCount v datab√°zi
        set(stockRef, stockCount)
            .then(() => {
              alert(`Objedn√°no ${quantity} d√≠l≈Ø. Zb√Ωv√° skladem: ${stockCount}`);
              // P≈ô√≠padnƒõ zapi≈° objedn√°vku do datab√°ze
              const orderRef = ref(db, `orders/order${Date.now()}`);
              set(orderRef, {
                quantity: quantity,
                status: 'Objedn√°no',
                timestamp: Date.now(),
              });
              updateAvailability();  // Aktualizace dostupnosti po objedn√°vce
            })
            .catch((error) => {
              console.error("Chyba p≈ôi aktualizaci skladu:", error);
              alert("Do≈°lo k chybƒõ p≈ôi zpracov√°n√≠ objedn√°vky.");
            });
      } else {
        alert("Nen√≠ dostateƒçn√Ω poƒçet d√≠l≈Ø na skladƒõ!");
      }
    } else {
      alert("Chyba p≈ôi naƒç√≠t√°n√≠ informac√≠ o skladu.");
    }
  }).catch((error) => {
    console.error("Chyba p≈ôi z√≠sk√°v√°n√≠ informac√≠ o skladƒõ:", error);
  });
}

window.addEventListener("DOMContentLoaded", () => {
  console.log("DOM naƒçten");
  console.log("adminText:", document.getElementById('adminText'));
  console.log("adminLogout:", document.getElementById('adminLogout'));
  console.log("resetStockButton:", document.getElementById('resetStockButton'));
  console.log("ordersOverview:", document.getElementById('ordersOverview'));

  // Zobraz√≠ dostupnost p≈ôi naƒçten√≠ str√°nky
  updateAvailability();
});

// Funkce pro spr√°vu UI
function toggleLoginControls(show) {
  document.getElementById('loginButton').style.display = show ? 'inline-block' : 'none';
}

document.addEventListener("DOMContentLoaded", () => {
  const loginButton = document.getElementById('loginButton');
  if (loginButton) {
    loginButton.style.display = 'inline-block';
  }
});

function toggleAdminControls(show) {
  const adminText = document.getElementById('adminText');
  const adminLogout = document.getElementById('adminLogout');
  const resetStockButton = document.getElementById('resetStockButton');
  const ordersOverview = document.getElementById('ordersOverview');

  if (adminText) adminText.style.display = show ? 'inline-block' : 'none';
  if (adminLogout) adminLogout.style.display = show ? 'inline-block' : 'none';
  if (resetStockButton) resetStockButton.style.display = show ? 'inline-block' : 'none';
  if (ordersOverview) ordersOverview.style.display = show ? 'inline-block' : 'none';
}

onAuthStateChanged(auth, async (user) => {
  console.log("U≈æivatel p≈ôihl√°≈°en:", user);  // Zkontroluj, ≈æe u≈æivatel je p≈ôihl√°≈°en
  if (user) {
    toggleLoginControls(true);
    const userRef = ref(db, `users/${user.uid}`);
    const snapshot = await get(userRef);

    if (snapshot.exists()) {
      console.log("Data u≈æivatele:", snapshot.val());  // Zkontroluj data u≈æivatele
      if (snapshot.val().role === 'admin') {
        toggleAdminControls(true);  // Zobraz admin tlaƒç√≠tka
        toggleLoginControls(false);
      } else {
        toggleAdminControls(false);  // Skryt√≠ admin tlaƒç√≠tek
      }
    } else {
      console.log("U≈æivatel nenalezen v datab√°zi");
      toggleAdminControls(false);
    }
  } else {
    toggleLoginControls(true);  // Zobraz login tlaƒç√≠tko, pokud nen√≠ p≈ôihl√°≈°en√Ω
    toggleAdminControls(false);  // Skryt√≠ admin tlaƒç√≠tek
  }
});

// Odhl√°≈°en√≠ admina
document.getElementById("adminLogout")?.addEventListener("click", () => {
  signOut(auth).then(() => {
    alert("Odhl√°≈°en.");
    window.location.href = "login.html";
  }).catch(console.error);
});

// Odes√≠l√°n√≠ objedn√°vek na Discord
function sendToDiscord(order) {
  const webhookURL = "https://discord.com/api/webhooks/1334031581873967184/oH8ks4jbvewVhGFEmfax47Gt-6PUhdaY_gum5zUxeX9fY0KdvLiaTcbVdpja9v9LqSCi";

  const message = {
    content: "**Nov√° objedn√°vka!** üì¶",
    embeds: [
      {
        title: "üìã Detaily objedn√°vky",
        color: 16773669,
        fields: [
          { name: "üí≥ Jm√©no", value: `${order.firstName} ${order.lastName}` },
          { name: "‚úâÔ∏è Email", value: order.email },
          { name: "üì± Telefon", value: order.phone },
          { name: "üì¶ Poƒçet", value: `${order.quantity}` },
          { name: "üóÇÔ∏è ƒå√≠slo objedn√°vky", value: `${order.id}` }
        ],
        footer: { text: "Odesl√°no z webov√© aplikace" }
      }
    ]
  };

  fetch(webhookURL, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(message)
  })
      .then(response => {
        if (!response.ok) throw new Error("Chyba p≈ôi odes√≠l√°n√≠ na Discord");
        console.log("Objedn√°vka byla odesl√°na na Discord!");
      })
      .catch(error => console.error("Chyba:", error));
}

// Obnoven√≠ skladu pouze adminem
document.getElementById('resetStockButton')?.addEventListener('click', async () => {
  const user = auth.currentUser;
  if (!user) return alert("Nejste p≈ôihl√°≈°en.");

  const userRef = ref(db, `users/${user.uid}`);
  const snapshot = await get(userRef);
  if (!snapshot.exists() || snapshot.val().role !== 'admin') return alert("Nem√°te opr√°vnƒõn√≠.");

  const restockAmount = prompt('Zadejte, kolik polo≈æek chcete p≈ôidat na sklad:');
  const parsedAmount = parseInt(restockAmount, 10);

  if (!isNaN(parsedAmount) && parsedAmount > 0) {
    const stockRef = ref(db, 'stock/stockCount');
    get(stockRef).then((snapshot) => {
      if (snapshot.exists()) {
        let stockCount = snapshot.val();
        stockCount += parsedAmount;
        set(stockRef, stockCount)
            .then(() => {
              alert('Z√°soby byly obnoveny!');
              updateAvailability();  // Aktualizace dostupnosti po obnoven√≠ skladu
            })
            .catch((error) => {
              console.error("Chyba p≈ôi obnovƒõ skladu:", error);
              alert("Do≈°lo k chybƒõ p≈ôi obnovƒõ skladu.");
            });
      }
    }).catch((error) => {
      console.error("Chyba p≈ôi z√≠sk√°v√°n√≠ informac√≠ o skladƒõ:", error);
    });
  }
});

document.getElementById("ordersOverview")?.addEventListener("click", (e) => {
  e.preventDefault(); // Zabra≈àuje v√Ωchoz√≠mu chov√°n√≠
  window.location.href = "overview.html";  // P≈ôesmƒõruje na p≈ôehled objedn√°vek
});
